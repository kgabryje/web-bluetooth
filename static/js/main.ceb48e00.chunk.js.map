{"version":3,"sources":["helpers.js","components/Button.js","components/Layout.js","components/Appear.js","components/BLEConfigHandler.js","components/SensorDataHandler.js","App.js","serviceWorker.js","index.js"],"names":["calcAccFromSensorOutput","val","FilledButton","styled","button","_templateObject","space","display","style","prop","cssProperty","numberToPx","height","alias","Box","boxSizing","color","width","minHeight","maxHeight","minWidth","maxWidth","fontSize","flex","order","alignSelf","position","borders","borderColor","zIndex","displayName","propTypes","Object","objectSpread","Flex","flexWrap","flexDirection","alignItems","justifyContent","Container","Layout_templateObject","defaultProps","mx","px","Appear","posed","enter","opacity","y","delay","delayChildren","staggerChildren","transition","ease","duration","exit","BLEConfigHandler","React","memo","_ref","characteristicState","dataHandler","context","useContext","SensorTagContext","accDataCharacteristic","setAccDataCharacteristic","stopNotifications","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","characteristic","wrap","_context","prev","next","abrupt","removeEventListener","prevChar","isNotifying","setErrorMessage","t0","message","stop","apply","this","arguments","resumeNotifications","_ref3","_callee2","_context2","startNotifications","addEventListener","useMemo","_callee3","configCharacteristic","dataCharacteristic","_context3","service","getCharacteristic","uuids","configCharUUID","sent","writeValue","Uint8Array","of","dataCharUUID","react_default","createElement","mt","onClick","Chart","lazy","__webpack_require__","e","then","bind","SensorDataHandler","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","values","setValues","firstDataIndex","useRef","handleAccDataChange","useCallback","event","buffer","target","value","output","getUint8","map","prevValues","newValues","concat","toConsumableArray","Math","hypot","length","shift","current","data","firstIndex","createContext","ACC_UUIDS","serviceUUID","App","accService","setAccService","errorMessage","getService","device","server","navigator","bluetooth","requestDevice","filters","services","gatt","connect","getPrimaryService","_x","contextValue","react","fallback","Provider","top","bottom","left","right","react_pose_es","key","SensorDataHandler_SensorDataHandler","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ceb48e00.chunk.js","sourcesContent":["export const calcAccFromSensorOutput = val =>\n  val > 127 ? (val - 256) / 64 : val / 64;","import styled from \"styled-components\";\nimport { space } from \"styled-system\";\n\nexport const FilledButton = styled.button`\n  ${space};\n  outline: none;\n  border-radius: 26.5px;\n  transition: all 0.2s ease-in-out;\n  min-width: 160px;\n  max-width: 192px;\n\n  padding: 9px 19px;\n\n  background-color: #2924fb;\n  border: solid 2px #2924fb;\n\n  font-size: 15px;\n  font-weight: bold;\n  color: white;\n\n  :hover {\n    background-color: #6e6afc;\n    border-color: #6e6afc;\n    cursor: pointer;\n  }\n\n  :active {\n    background-color: #a5a3fd;\n    border-color: #a5a3fd;\n  }\n`;\n","import styled from \"styled-components\";\nimport {\n  style,\n  space,\n  color,\n  width,\n  minHeight,\n  maxHeight,\n  minWidth,\n  maxWidth,\n  fontSize,\n  flex,\n  order,\n  alignSelf,\n  position,\n  borders,\n  borderColor,\n  zIndex,\n  flexWrap,\n  flexDirection,\n  alignItems,\n  justifyContent\n} from \"styled-system\";\n\nconst display = style({\n  prop: \"display\",\n  cssProperty: \"display\",\n  numberToPx: false\n});\n\nconst height = style({\n  prop: \"height\",\n  alias: \"h\",\n  numberToPx: true\n});\n\nexport const Box = styled(\"div\")(\n  {\n    boxSizing: \"border-box\"\n  },\n  space,\n  color,\n  width,\n  minHeight,\n  maxHeight,\n  minWidth,\n  maxWidth,\n  fontSize,\n  flex,\n  order,\n  alignSelf,\n  display,\n  height,\n  position,\n  borders,\n  borderColor,\n  zIndex\n);\n\nBox.displayName = \"Box\";\n\nBox.propTypes = {\n  ...space.propTypes,\n  ...color.propTypes,\n  ...width.propTypes,\n  ...fontSize.propTypes\n};\n\nexport const Flex = styled(Box)(\n  {\n    display: \"flex\"\n  },\n  flexWrap,\n  flexDirection,\n  alignItems,\n  justifyContent,\n  display,\n  height,\n  maxWidth,\n  maxHeight,\n  position,\n  borders,\n  borderColor,\n  zIndex\n);\n\nFlex.displayName = \"Flex\";\n\nFlex.propTypes = {\n  ...flexWrap.propTypes,\n  ...flexDirection.propTypes,\n  ...alignItems.propTypes,\n  ...justifyContent.propTypes\n};\n\n\nexport const Container = styled(Flex)`\n  ${position};\n  max-width: 64em;\n`;\n\nContainer.defaultProps = {\n  flexDirection: \"column\",\n  mx: \"auto\",\n  px: [\"8px\", \"64px\", \"none\"],\n};\n","import posed from \"react-pose\";\nimport { Flex } from \"./Layout\";\n\nexport const Appear = posed(Flex)({\n  enter: {\n    opacity: 1,\n    y: 0,\n    delay: 500,\n    delayChildren: 500,\n    staggerChildren: 500,\n    transition: {\n      opacity: { ease: \"easeOut\", duration: 500 },\n      y: { ease: \"easeOut\", duration: 500 }\n    }\n  },\n  exit: {\n    opacity: 0,\n    y: 300,\n    transition: {\n      opacity: { ease: \"easeOut\", duration: 500 },\n      y: { ease: \"easeOut\", duration: 500 }\n    }\n  }\n});","import React, { useContext, useMemo } from \"react\";\nimport { SensorTagContext } from \"../App\";\nimport { FilledButton } from \"./Button\";\nimport { Flex } from \"./Layout\";\nimport { Appear } from \"./Appear\"\n\nexport const BLEConfigHandler = React.memo(\n  ({ characteristicState, dataHandler }) => {\n    const context = useContext(SensorTagContext);\n    const {\n      accDataCharacteristic,\n      setAccDataCharacteristic\n    } = characteristicState;\n\n    const stopNotifications = async () => {\n      const characteristic = accDataCharacteristic.characteristic;\n      if (!characteristic) {\n        return;\n      }\n      try {\n        await characteristic.stopNotifications();\n        characteristic.removeEventListener(\n          \"characteristicvaluechanged\",\n          dataHandler\n        );\n\n        setAccDataCharacteristic(prevChar => ({\n          ...prevChar,\n          isNotifying: false\n        }));\n        context.setErrorMessage(\"\");\n      } catch (error) {\n        context.setErrorMessage(error.message);\n      }\n    };\n\n    const resumeNotifications = async () => {\n      const characteristic = accDataCharacteristic.characteristic;\n      if (!characteristic) {\n        return;\n      }\n      try {\n        await characteristic.startNotifications();\n        characteristic.addEventListener(\n          \"characteristicvaluechanged\",\n          dataHandler\n        );\n        setAccDataCharacteristic(prevChar => ({\n          ...prevChar,\n          isNotifying: true\n        }));\n        context.setErrorMessage(\"\");\n      } catch (error) {\n        context.setErrorMessage(error.message);\n      }\n    };\n\n    useMemo(async () => {\n      if (!context.service) {\n        return;\n      }\n\n      try {\n        const configCharacteristic = await context.service.getCharacteristic(\n          context.uuids.configCharUUID\n        );\n        await configCharacteristic.writeValue(Uint8Array.of(1)); // enable acc sensor\n\n        const dataCharacteristic = await context.service.getCharacteristic(\n          context.uuids.dataCharUUID\n        ); // read acc sensor output\n        await dataCharacteristic.startNotifications();\n        dataCharacteristic.addEventListener(\n          \"characteristicvaluechanged\",\n          dataHandler\n        );\n\n        setAccDataCharacteristic({\n          characteristic: dataCharacteristic,\n          isNotifying: true\n        });\n        context.setErrorMessage(\"\");\n      } catch (error) {\n        context.setErrorMessage(error.message);\n      }\n    }, [context, dataHandler, setAccDataCharacteristic]);\n\n    return (\n      <Flex justifyContent=\"center\" mt=\"100px\">\n        {context.service && accDataCharacteristic.characteristic && (\n          <Appear>\n            {accDataCharacteristic.isNotifying ? (\n              <FilledButton onClick={stopNotifications}>\n                Stop reading data\n              </FilledButton>\n            ) : (\n              <FilledButton onClick={resumeNotifications}>\n                Start reading data\n              </FilledButton>\n            )}\n          </Appear>\n        )}\n      </Flex>\n    );\n  }\n);\n","import React, { useState, useCallback, useRef, lazy } from \"react\";\nimport { calcAccFromSensorOutput } from \"../helpers\";\nimport { BLEConfigHandler } from \"./BLEConfigHandler\";\nimport { Box } from \"./Layout\";\nconst Chart = lazy(() => import(\"./chart/Chart\"));\n\nexport const SensorDataHandler = () => {\n  const [accDataCharacteristic, setAccDataCharacteristic] = useState({\n    characteristic: null,\n    isNotifying: false\n  });\n  const [values, setValues] = useState([]);\n  const firstDataIndex = useRef(0);\n\n  const handleAccDataChange = useCallback(event => {\n    const buffer = event.target.value;\n    const output = [\n      buffer.getUint8(0), // axisX\n      buffer.getUint8(1), // axisY\n      buffer.getUint8(2) // axisZ\n    ].map(calcAccFromSensorOutput);\n\n    setValues(prevValues => {\n      const newValues = [...prevValues, Math.hypot(...output)];\n      if (newValues.length > 20) {\n        newValues.shift();\n        firstDataIndex.current++;\n      }\n      return newValues;\n    });\n  }, []);\n\n  return (\n    <Box width=\"100%\" maxHeight=\"100%\">\n      <Chart data={values} firstIndex={firstDataIndex.current} />\n      <BLEConfigHandler\n        characteristicState={{\n          accDataCharacteristic,\n          setAccDataCharacteristic\n        }}\n        dataHandler={handleAccDataChange}\n      />\n    </Box>\n  );\n};\n","import React, { useState, Suspense } from \"react\";\nimport { PoseGroup } from \"react-pose\";\nimport { SensorDataHandler } from \"./components/SensorDataHandler\";\nimport { FilledButton } from \"./components/Button\";\nimport { Container } from \"./components/Layout\";\nimport { Appear } from \"./components/Appear\";\n\nexport const SensorTagContext = React.createContext({\n  uuids: {},\n  service: {},\n  setErrorMessage: () => {}\n});\n\nconst ACC_UUIDS = {\n  serviceUUID: \"f000aa10-0451-4000-b000-000000000000\",\n  dataCharUUID: \"f000aa11-0451-4000-b000-000000000000\",\n  configCharUUID: \"f000aa12-0451-4000-b000-000000000000\"\n};\n\nconst App = () => {\n  const [accService, setAccService] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const getService = async serviceUUID => {\n    try {\n      const device = await navigator.bluetooth.requestDevice({\n        filters: [{ services: [serviceUUID] }]\n      });\n      const server = await device.gatt.connect();\n      const service = await server.getPrimaryService(serviceUUID);\n\n      setAccService(service);\n      setErrorMessage(\"\");\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n\n  const contextValue = {\n    uuids: ACC_UUIDS,\n    service: accService,\n    setErrorMessage: setErrorMessage\n  };\n\n  return (\n    <Suspense fallback={<div />}>\n      <SensorTagContext.Provider value={contextValue}>\n        <Container\n          position=\"absolute\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          top={0}\n          bottom={0}\n          left={0}\n          right={0}\n        >\n          <PoseGroup>\n            {accService ? (\n              <Appear width=\"100%\" key=\"chart\">\n                <SensorDataHandler />\n              </Appear>\n            ) : (\n              <Appear key=\"search-button\">\n                <FilledButton onClick={() => getService(ACC_UUIDS.serviceUUID)}>\n                  Find SensorTag\n                </FilledButton>\n              </Appear>\n            )}\n          </PoseGroup>\n          <p style={{ color: \"#ff2500\" }}>{errorMessage}</p>\n        </Container>\n      </SensorTagContext.Provider>\n    </Suspense>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}